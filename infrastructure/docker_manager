module "docker_manager_asg" {
    source              = "./modules/asg-no-lb"
    //ASG variables
    asg_name            = "docker-manager-autoscaling-group" 
    subnet_ids          = ["${aws_subnet.application_pub_subnet.*.id}"]
    availability_zones  = ["${data.aws_availability_zones.all.names}"]
    min_size            = 3
    max_size            = 3
    tag_name            = "docker-manager"
    tag_description     = "Docker manager swarm instance"
    vpc_id              = "${aws_vpc.application_vpc.id}"
    lc_sec_group        = ["${aws_security_group.docker_manager_security_group.id}"]
    lc_key_name         = "${var.docker_manager_key_name}"
    lc_iam_profile      = "${module.docker_manager_iam_role.iam_instance_profile}"
    lc_it               = "${var.docker_manager_instance_type}"
    lc_image_id         = "${var.docker_manager_ami}"
    lc_name_prefix      = "docker-manager-launch-config-"
    associate_pub_ip    = true
}

module "docker_manager_iam_role" {
  source             = "./modules/iam_role"
  config             = "${var.docker_manager_iam_role_config}"
  assume_role_policy = "${file("${path.root}/templates/assume_role_policy.json")}" 
  iam_role_policy    = "${file("${path.root}/templates/docker_manager_role_policy.json")}"
}

resource "aws_security_group" "docker_manager_security_group" {
  name        = "docker-manager-sg"
  description = "docker manager security group"
  vpc_id      = "${aws_vpc.application_vpc.id}"

/*
  lifecycle {
    ignore_changes = ["ingress"] #to prevent rebuild when we manually add our home's public IP
  }
*/

  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["${var.man_pub_subnets}"]
    self        = true
  }

  ingress {
    from_port   = 443
    to_port     = 443
    protocol    = "tcp"
    cidr_blocks = ["${var.man_pub_subnets}"]
    self        = true
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
}